{"version":3,"file":"notification_statusrule.min.js","sources":["../src/notification_statusrule.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * @module    local_notificationsagent/statusrule\n * @copyright 2023 ISYC <soporte@isyc.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_strings as getStrings} from 'core/str';\nimport Notification from 'core/notification';\nimport {updateRuleStatus} from 'local_notificationsagent/rule/repository';\n\n/**\n * Types of rule states\n * \n * @type {{RULE_STATUS: boolean}}\n */\nconst RULE_STATUS = {\n    RESUMED: 0,\n    PAUSED: 1,\n};\n\n/**\n * Text to be displayed when pausing, or resuming a rule.\n * \n * @type {{RULE_STATUS_STRING: string}}\n */\nconst RULE_STATUS_STRING = [\n    {\n        key: 'status_paused', component: 'local_notificationsagent',\n    },\n    {\n        key: 'status_active', component: 'local_notificationsagent',\n    },\n    {\n        key: 'statusacceptpaused', component: 'local_notificationsagent',\n    },\n    {\n        key: 'statusacceptactivated', component: 'local_notificationsagent',\n    }\n];\n\n/**\n * Registers the click event listener for the status button of a rule.\n */\nexport const init = () => {\n    $('#statusRuleModal').on('show.bs.modal', function (e) {\n        ruleButton = $(e.relatedTarget);\n        let id = ruleButton.data('idrule');\n        let statusText = ruleButton.data('textstatus');\n\n        const modal = $(this);\n\n        const requiredStrings = [\n            {key: 'statustitle', component: 'local_notificationsagent', param: {\n                textstatus: statusText,\n                title: $('#card-' + id + ' .name').text()\n            }},\n            {key: 'statuscontent', component: 'local_notificationsagent', param: {\n                textstatus: statusText.toLowerCase(),\n                title: $('#card-' + id + ' .name').text()\n            }},\n        ];\n\n        getStrings(requiredStrings).then(([ruleTitle, ruleContent]) => {\n            modal.find('.modal-title').text(ruleTitle);\n            modal.find('.modal-body > div').text(ruleContent);\n        });\n    });\n\n    $('#statusRuleModal #acceptStatusRule').on('click', (e) => {\n        e.preventDefault();\n        setRuleStatus(ruleButton);\n    });\n};\n\n/**\n * Changes the status for a given rule.\n * @param {HTMLElement} ruleButton\n * @returns {Promise<void>}\n */\nconst setRuleStatus = async(ruleButton) => {\n    let ruleid = ruleButton.data('idrule');\n    let status = ruleButton.data('valuestatus');\n\n    if (!status) {\n        status = RULE_STATUS.RESUMED;\n    } else {\n        status = RULE_STATUS.PAUSED;\n    }\n\n    $('#statusRuleModal').modal('hide');\n\n    getStrings(RULE_STATUS_STRING).then(([ruleBadgePaused, ruleBadgeActive, rulePaused, ruleResumed]) => {\n        let badgestatus = $('#card-'+ruleid+' .badge-status');\n        if (status) {\n            badgestatus.removeClass('badge-active');\n            badgestatus.addClass('badge-paused');\n            badgestatus.find('span').text(ruleBadgePaused);\n        } else {\n            badgestatus.removeClass('badge-paused');\n            badgestatus.addClass('badge-active');\n            badgestatus.find('span').text(ruleBadgeActive);\n        }\n\n        ruleButton.addClass('d-none');\n        if (status) {\n            $('a[data-idrule=\"' + ruleid + '\"][data-target=\"#statusRuleModal\"][data-valuestatus=\"0\"]').removeClass('d-none');\n            Notification.addNotification({\n                message: rulePaused,\n                type: \"info\"\n            });\n        } else {\n            $('a[data-idrule=\"' + ruleid + '\"][data-target=\"#statusRuleModal\"][data-valuestatus=\"1\"]').removeClass('d-none');\n            Notification.addNotification({\n                message: ruleResumed,\n                type: \"info\"\n            });\n        }\n    });\n\n    try {\n        // TODO Display warnings as Notification exception \n        response = await updateRuleStatus(ruleid, status);\n    } catch (exception) {\n        Notification.exception(exception);\n    }\n};\n"],"names":["RULE_STATUS","RULE_STATUS_STRING","key","component","$","on","e","ruleButton","relatedTarget","id","data","statusText","modal","this","requiredStrings","param","textstatus","title","text","toLowerCase","then","_ref","ruleTitle","ruleContent","find","preventDefault","setRuleStatus","async","ruleid","status","_ref2","ruleBadgePaused","ruleBadgeActive","rulePaused","ruleResumed","badgestatus","removeClass","addClass","addNotification","message","type","response","exception"],"mappings":";;;;;4JA8BMA,oBACO,EADPA,mBAEM,EAQNC,mBAAqB,CACvB,CACIC,IAAK,gBAAiBC,UAAW,4BAErC,CACID,IAAK,gBAAiBC,UAAW,4BAErC,CACID,IAAK,qBAAsBC,UAAW,4BAE1C,CACID,IAAK,wBAAyBC,UAAW,2CAO7B,KAChBC,EAAE,oBAAoBC,GAAG,iBAAiB,SAAUC,GAChDC,WAAaH,EAAEE,EAAEE,mBACbC,GAAKF,WAAWG,KAAK,UACrBC,WAAaJ,WAAWG,KAAK,oBAE3BE,MAAQR,EAAES,MAEVC,gBAAkB,CACpB,CAACZ,IAAK,cAAeC,UAAW,2BAA4BY,MAAO,CAC/DC,WAAYL,WACZM,MAAOb,EAAE,SAAWK,GAAK,UAAUS,SAEvC,CAAChB,IAAK,gBAAiBC,UAAW,2BAA4BY,MAAO,CACjEC,WAAYL,WAAWQ,cACvBF,MAAOb,EAAE,SAAWK,GAAK,UAAUS,+BAIhCJ,iBAAiBM,MAAKC,WAAEC,UAAWC,kBAC1CX,MAAMY,KAAK,gBAAgBN,KAAKI,WAChCV,MAAMY,KAAK,qBAAqBN,KAAKK,mBAI7CnB,EAAE,sCAAsCC,GAAG,SAAUC,IACjDA,EAAEmB,iBACFC,cAAcnB,sBAShBmB,cAAgBC,MAAAA,iBACdC,OAASrB,WAAWG,KAAK,UACzBmB,OAAStB,WAAWG,KAAK,eAKzBmB,OAHCA,OAGQ7B,mBAFAA,oBAKbI,EAAE,oBAAoBQ,MAAM,6BAEjBX,oBAAoBmB,MAAKU,YAAEC,gBAAiBC,gBAAiBC,WAAYC,mBAC5EC,YAAc/B,EAAE,SAASwB,OAAO,kBAChCC,QACAM,YAAYC,YAAY,gBACxBD,YAAYE,SAAS,gBACrBF,YAAYX,KAAK,QAAQN,KAAKa,mBAE9BI,YAAYC,YAAY,gBACxBD,YAAYE,SAAS,gBACrBF,YAAYX,KAAK,QAAQN,KAAKc,kBAGlCzB,WAAW8B,SAAS,UAChBR,QACAzB,EAAE,kBAAoBwB,OAAS,4DAA4DQ,YAAY,gCAC1FE,gBAAgB,CACzBC,QAASN,WACTO,KAAM,WAGVpC,EAAE,kBAAoBwB,OAAS,4DAA4DQ,YAAY,gCAC1FE,gBAAgB,CACzBC,QAASL,YACTM,KAAM,iBAOdC,eAAiB,gCAAiBb,OAAQC,QAC5C,MAAOa,iCACQA,UAAUA"}